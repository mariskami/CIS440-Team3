"use strict";

// import modules for creating a server, using MySQL, and using events
let http = require("http");
let mysql = require("mysql");
let events = require("events");

// declare global variables for use across functions
let sqlquery = ''
let output = ''
let res = ''

// construct event emitter for handling the output event
let eventEmitter = new events.EventEmitter();
eventEmitter.on("output", outputHandler)

// construct a server socket
let httpServer = http.createServer(loadAdviceGivers);
httpServer.listen(8080);

function loadAdviceGivers(request, response){

    res = response;

    // store host from request
    let host = "http://" + request.headers["host"];

    // begin write to response with type html
    response.writeHead(200, {"Content-type": "text/html"});

    // construct URL object using host
    let url = new URL(request.url, host);

    // write query to return advice-giver data
    sqlquery = `select * from AdviceGiver`
    startDatabase();
}

function startDatabase(){

    // create string for connecting to a database
    let connectionString = {
        host: "107.180.1.16:3306",
        database: "cis440fall2021group3",
        user: "fall2021group3",
        password: "group3fall2021"
    };

    console.log(`Connection string has been created with host: ${connectionString.host},
    database: ${connectionString.database}, and user: ${connectionString.user}`);

    // create connection with MySQL module using connection string
    let conn = mysql.createConnection(connectionString);
    console.log(`Connecting to database...`);

    // connect to database
    conn.connect(
        function(err){
            if (err) throw err;
            // if no error, pass query to connection method
            conn.query(sqlquery, processResult);
            console.log(`Executing this query: ${sqlquery}`);
            conn.end();
        }
    )
}

function processResult(err, result){

    if (err){
        console.log(`Error occured: ${err}`);
        throw err;
    }

    // for each result returned, pass reference to output printing method
    result.forEach(printRecord);

    // emit event that writes output to response
    eventEmitter.emit("output");

}

function printRecord(record){


    // construct HTML output to write to response
    output = `<html>
   
    <body>
    <section id="wrapper"></body>Here is the current list of registered Advice Givers:<br>
    <h1 style="background-color:#ffadad;">${record.aUsername}</h1>
    <table id="description">
    <tr>
    <td class="headers">Name: </td>
    <td>${record.aFirstName} ${record.aLastName}</td>
    </tr>
    <tr>
    <td class="headers">Occupation: </td>
    <td>${record.aOccupation}</td>
    </tr>
    <tr>
    <td class="headers">Biography: </td>
    <td>${record.aBiography}</td>
    </tr>
    </table>
    </section>
    </html>`
}

function outputHandler(){

    console.log(`Writing output...`)

    // write output constructed to response and end
    res.write(output);
    res.end();

    console.log(`Response has ended - HTML output with db info executed.`);
